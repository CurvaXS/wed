<script setup>
import { ref, computed } from 'vue';
import { useRouter } from 'vue-router';
import { useAuthStore } from '@/stores/auth';
import { authService } from '@/services/apiService';

const router = useRouter();
const authStore = useAuthStore();

// Registration steps state
const currentStep = ref(1);
const otpCode = ref('');
const otpSent = ref(false);
const otpVerified = ref(false);
const otpError = ref('');
const isSendingOtp = ref(false);
const isVerifyingOtp = ref(false);

// Form data
const form = ref({
    username: '',
    firstName: '',
    lastName: '',
    partnerFirstName: '',
    partnerLastName: '',
    email: '',
    phone: '',
    password: '',
    confirmPassword: '',
    role: 'couple',
    agreeTerms: false
});

// Error handling
const errors = ref({});
const serverError = ref('');

// Form validation
const validateForm = () => {
    errors.value = {};
    
    if (currentStep.value >= 3) {
        if (!form.value.username.trim()) {
            errors.value.username = 'Имя пользователя обязательно';
        }
        
        if (!form.value.firstName.trim()) {
            errors.value.firstName = 'Имя обязательно';
        }
        
        if (!form.value.lastName.trim()) {
            errors.value.lastName = 'Фамилия обязательна';
        }
        
        if (form.value.role === 'couple') {
            if (!form.value.partnerFirstName.trim()) {
                errors.value.partnerFirstName = 'Имя второго супруга обязательно';
            }
            
            if (!form.value.partnerLastName.trim()) {
                errors.value.partnerLastName = 'Фамилия второго супруга обязательна';
            }
        }
        
        if (!form.value.email.trim()) {
            errors.value.email = 'Email обязателен';
        } else if (!/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(form.value.email)) {
            errors.value.email = 'Неверный формат email';
        }
        
        if (!form.value.password) {
            errors.value.password = 'Пароль обязателен';
        } else if (form.value.password.length < 8) {
            errors.value.password = 'Минимум 8 символов';
        }
        
        if (form.value.password !== form.value.confirmPassword) {
            errors.value.confirmPassword = 'Пароли не совпадают';
        }
        
        if (!form.value.agreeTerms) {
            errors.value.agreeTerms = 'Необходимо согласие с условиями';
        }
    }
    
    return Object.keys(errors.value).length === 0;
};

// Send OTP code
const sendOtp = async () => {
    if (!form.value.phone) {
        errors.value.phone = 'Введите номер телефона';
        return;
    }
    
    isSendingOtp.value = true;
    otpError.value = '';
    
    try {
        await authService.sendOTP({ phone: form.value.phone });
        otpSent.value = true;
        currentStep.value = 2;
    } catch (error) {
        console.error('Ошибка при отправке OTP:', error);
        otpError.value = error.message || 'Не удалось отправить код. Попробуйте снова.';
    } finally {
        isSendingOtp.value = false;
    }
};

// Verify OTP code
const verifyOtp = async () => {
    if (!otpCode.value || otpCode.value.length !== 6) {
        otpError.value = 'Введите 6-значный код';
        return;
    }
    
    isVerifyingOtp.value = true;
    otpError.value = '';
    
    try {
        await authService.verifyOTP({
            phone: form.value.phone,
            otp: otpCode.value
        });
        otpVerified.value = true;
        currentStep.value = 3;
    } catch (error) {
        console.error('Ошибка при верификации OTP:', error);
        otpError.value = error.message || 'Неверный код. Попробуйте снова.';
    } finally {
        isVerifyingOtp.value = false;
    }
};

// Handle form submission
const handleSubmit = async () => {
    if (!validateForm()) return;
    
    try {
        const userData = {
            username: form.value.username,
            email: form.value.email,
            phone: form.value.phone,
            password: form.value.password,
            password_confirm: form.value.confirmPassword,
            first_name: form.value.firstName,
            last_name: form.value.lastName,
            user_type: form.value.role,
            otp_code: otpCode.value
        };
        
        if (form.value.role === 'couple') {
            userData.partner_first_name = form.value.partnerFirstName;
            userData.partner_last_name = form.value.partnerLastName;
        }
        
        const result = await authService.registerWithOTP(userData);
        
        if (result.token) {
            localStorage.setItem('token', result.token);
            authStore.token = result.token;
            authStore.user = result.user;
            
            const username = form.value.role === 'couple' 
                ? `${form.value.firstName} и ${form.value.partnerFirstName}`
                : `${form.value.firstName} ${form.value.lastName}`;
                
            localStorage.setItem('username', username);
            router.push('/profile');
        } else {
            serverError.value = 'Ошибка при регистрации';
        }
    } catch (error) {
        console.error('Registration error:', error);
        
        if (error.errors) {
            Object.keys(error.errors).forEach(field => {
                errors.value[field] = error.errors[field][0];
            });
            
            if (Object.keys(errors.value).length === 0) {
                serverError.value = 'Ошибка при регистрации. Попробуйте снова.';
            }
        } else {
            serverError.value = error.message || 'Ошибка при регистрации. Попробуйте снова.';
        }
    }
};

// Handle OTP input
const onOtpInput = (e, index) => {
    const value = e.target.value;
    if (value && index < 5) {
        document.getElementById(`otp-${index + 1}`)?.focus();
    }
};

// Handle OTP backspace
const onOtpKeyDown = (e, index) => {
    if (e.key === 'Backspace' && !e.target.value && index > 0) {
        document.getElementById(`otp-${index - 1}`)?.focus();
    }
};
</script>

<template>
    <div class="register-page py-12 min-h-screen bg-gray-50">
        <div class="container mx-auto px-4">
            <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg overflow-hidden">
                <div class="p-8">
                    <h1 class="text-2xl font-bold text-gray-800 text-center mb-8">Регистрация</h1>
                    
                    <!-- Registration Steps -->
                    <div class="flex justify-between mb-8">
                        <div :class="['flex flex-col items-center', currentStep >= 1 ? 'text-pink-600' : 'text-gray-400']">
                            <div :class="['w-8 h-8 rounded-full flex items-center justify-center mb-1', currentStep >= 1 ? 'bg-pink-600 text-white' : 'bg-gray-200 text-gray-600']">1</div>
                            <span class="text-xs font-medium">Телефон</span>
                        </div>
                        <div class="flex-1 flex items-center px-2">
                            <div class="h-0.5 w-full" :class="currentStep >= 2 ? 'bg-pink-600' : 'bg-gray-200'"></div>
                        </div>
                        <div :class="['flex flex-col items-center', currentStep >= 2 ? 'text-pink-600' : 'text-gray-400']">
                            <div :class="['w-8 h-8 rounded-full flex items-center justify-center mb-1', currentStep >= 2 ? 'bg-pink-600 text-white' : 'bg-gray-200 text-gray-600']">2</div>
                            <span class="text-xs font-medium">Код</span>
                        </div>
                        <div class="flex-1 flex items-center px-2">
                            <div class="h-0.5 w-full" :class="currentStep >= 3 ? 'bg-pink-600' : 'bg-gray-200'"></div>
                        </div>
                        <div :class="['flex flex-col items-center', currentStep >= 3 ? 'text-pink-600' : 'text-gray-400']">
                            <div :class="['w-8 h-8 rounded-full flex items-center justify-center mb-1', currentStep >= 3 ? 'bg-pink-600 text-white' : 'bg-gray-200 text-gray-600']">3</div>
                            <span class="text-xs font-medium">Данные</span>
                        </div>
                    </div>
                    
                    <!-- Error Message -->
                    <div v-if="serverError || otpError" class="p-4 bg-red-50 border border-red-200 rounded-lg text-red-700 mb-6">
                        {{ serverError || otpError }}
                    </div>
                    
                    <!-- Step 1: Phone Number -->
                    <form v-if="currentStep === 1" @submit.prevent="sendOtp" class="space-y-6">
                        <div>
                            <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Номер телефона</label>
                            <input
                                type="tel"
                                id="phone"
                                v-model="form.phone"
                                placeholder="+7 (___) ___-____"
                                class="w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                :class="{ 'border-red-500': errors.phone }"
                                v-mask="'+7 (###) ###-####'"
                            />
                            <p v-if="errors.phone" class="mt-1 text-sm text-red-500">{{ errors.phone }}</p>
                        </div>
                        
                        <button
                            type="submit"
                            class="w-full bg-pink-600 text-white py-3 px-4 rounded-lg hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition"
                            :disabled="isSendingOtp"
                        >
                            <span v-if="isSendingOtp" class="flex items-center justify-center">
                                <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Отправка...
                            </span>
                            <span v-else>Получить код</span>
                        </button>
                        
                        <p class="text-xs text-gray-500 text-center mt-4">
                            Нажимая кнопку, вы соглашаетесь с нашими 
                            <a href="/terms" class="text-pink-600 hover:underline">Условиями использования</a> и 
                            <a href="/privacy" class="text-pink-600 hover:underline">Политикой конфиденциальности</a>
                        </p>
                    </form>
                    
                    <!-- Step 2: OTP Verification -->
                    <form v-else-if="currentStep === 2" @submit.prevent="verifyOtp" class="space-y-6">
                        <div class="text-center">
                            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4">
                                <svg class="h-6 w-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                </svg>
                            </div>
                            <h3 class="text-lg font-medium text-gray-900 mb-1">Проверьте ваш телефон</h3>
                            <p class="text-sm text-gray-600">Мы отправили SMS с кодом подтверждения на номер <span class="font-medium">{{ form.phone }}</span></p>
                        </div>
                        
                        <div class="space-y-4">
                            <div class="flex justify-center space-x-2">
                                <input
                                    v-for="i in 6"
                                    :key="i"
                                    :id="`otp-${i-1}`"
                                    v-model="otpCode[i-1]"
                                    @input="onOtpInput($event, i-1)"
                                    @keydown.delete="onOtpKeyDown($event, i-1)"
                                    type="text"
                                    maxlength="1"
                                    inputmode="numeric"
                                    pattern="[0-9]*"
                                    class="w-12 h-12 text-2xl text-center border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                                    :class="{ 'border-pink-500': otpCode[i-1] }"
                                />
                            </div>
                            
                            <button
                                type="submit"
                                class="w-full bg-pink-600 text-white py-3 px-4 rounded-lg hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition"
                                :disabled="isVerifyingOtp || otpCode.length !== 6"
                            >
                                <span v-if="isVerifyingOtp" class="flex items-center justify-center">
                                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Проверка...
                                </span>
                                <span v-else>Подтвердить</span>
                            </button>
                            
                            <div class="flex justify-between items-center text-sm">
                                <button
                                    type="button"
                                    @click="currentStep = 1"
                                    class="text-pink-600 hover:text-pink-700 focus:outline-none flex items-center"
                                >
                                    <svg class="h-4 w-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                    </svg>
                                    Назад
                                </button>
                                
                                <button
                                    type="button"
                                    @click="sendOtp"
                                    class="text-pink-600 hover:text-pink-700 focus:outline-none"
                                    :disabled="isSendingOtp"
                                >
                                    <span v-if="isSendingOtp">
                                        <svg class="animate-spin -ml-1 mr-1 h-4 w-4 text-pink-600 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                        </svg>
                                        Отправка...
                                    </span>
                                    <span v-else>Отправить код повторно</span>
                                </button>
                            </div>
                        </div>
                    </form>
                    
                    <!-- Step 3: Registration Form -->
                    <form v-else @submit.prevent="handleSubmit" class="space-y-4">
                        <div class="space-y-6">
                            <!-- Role Selection -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Я регистрируюсь как:</label>
                                <div class="grid grid-cols-2 gap-4">
                                    <button
                                        type="button"
                                        @click="form.role = 'couple'"
                                        :class="['py-3 px-4 rounded-lg border-2 transition-colors', form.role === 'couple' ? 'border-pink-500 bg-pink-50 text-pink-700' : 'border-gray-200 hover:border-gray-300']"
                                    >
                                        <i class="fas fa-heart mr-2"></i>
                                        Пара
                                    </button>
                                    <button
                                        type="button"
                                        @click="form.role = 'specialist'"
                                        :class="['py-3 px-4 rounded-lg border-2 transition-colors', form.role === 'specialist' ? 'border-pink-500 bg-pink-50 text-pink-700' : 'border-gray-200 hover:border-gray-300']"
                                    >
                                        <i class="fas fa-user-tie mr-2"></i>
                                        Специалист
                                    </button>
                                </div>
                            </div>
                            
                            <!-- User Information -->
                            <div>
                                <h3 v-if="form.role === 'couple'" class="text-md font-medium text-gray-700 mb-3">Данные первого супруга</h3>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                    <div>
                                        <label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">Имя</label>
                                        <input
                                            type="text"
                                            id="firstName"
                                            v-model="form.firstName"
                                            class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                            :class="{ 'border-red-500': errors.firstName }"
                                        />
                                        <p v-if="errors.firstName" class="mt-1 text-sm text-red-500">{{ errors.firstName }}</p>
                                    </div>
                                    <div>
                                        <label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">Фамилия</label>
                                        <input
                                            type="text"
                                            id="lastName"
                                            v-model="form.lastName"
                                            class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                            :class="{ 'border-red-500': errors.lastName }"
                                        />
                                        <p v-if="errors.lastName" class="mt-1 text-sm text-red-500">{{ errors.lastName }}</p>
                                    </div>
                                </div>
                                
                                <!-- Partner Information (for couples) -->
                                <div v-if="form.role === 'couple'" class="mt-6">
                                    <h3 class="text-md font-medium text-gray-700 mb-3">Данные второго супруга</h3>
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div>
                                            <label for="partnerFirstName" class="block text-sm font-medium text-gray-700 mb-1">Имя</label>
                                            <input
                                                type="text"
                                                id="partnerFirstName"
                                                v-model="form.partnerFirstName"
                                                class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                                :class="{ 'border-red-500': errors.partnerFirstName }"
                                            />
                                            <p v-if="errors.partnerFirstName" class="mt-1 text-sm text-red-500">{{ errors.partnerFirstName }}</p>
                                        </div>
                                        <div>
                                            <label for="partnerLastName" class="block text-sm font-medium text-gray-700 mb-1">Фамилия</label>
                                            <input
                                                type="text"
                                                id="partnerLastName"
                                                v-model="form.partnerLastName"
                                                class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                                :class="{ 'border-red-500': errors.partnerLastName }"
                                            />
                                            <p v-if="errors.partnerLastName" class="mt-1 text-sm text-red-500">{{ errors.partnerLastName }}</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Contact Information -->
                            <div class="space-y-4">
                                <div>
                                    <label for="username" class="block text-sm font-medium text-gray-700 mb-1">Имя пользователя</label>
                                    <input
                                        type="text"
                                        id="username"
                                        v-model="form.username"
                                        class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                        :class="{ 'border-red-500': errors.username }"
                                        placeholder="Придумайте логин"
                                    />
                                    <p v-if="errors.username" class="mt-1 text-sm text-red-500">{{ errors.username }}</p>
                                </div>
                                
                                <div>
                                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                                    <input
                                        type="email"
                                        id="email"
                                        v-model="form.email"
                                        class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                        :class="{ 'border-red-500': errors.email }"
                                        placeholder="example@mail.com"
                                    />
                                    <p v-if="errors.email" class="mt-1 text-sm text-red-500">{{ errors.email }}</p>
                                </div>
                                
                                <div>
                                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Пароль</label>
                                    <input
                                        type="password"
                                        id="password"
                                        v-model="form.password"
                                        class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                        :class="{ 'border-red-500': errors.password }"
                                        placeholder="Не менее 8 символов"
                                    />
                                    <p v-if="errors.password" class="mt-1 text-sm text-red-500">{{ errors.password }}</p>
                                </div>
                                
                                <div>
                                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Подтвердите пароль</label>
                                    <input
                                        type="password"
                                        id="confirmPassword"
                                        v-model="form.confirmPassword"
                                        class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent transition"
                                        :class="{ 'border-red-500': errors.confirmPassword }"
                                        placeholder="Повторите пароль"
                                    />
                                    <p v-if="errors.confirmPassword" class="mt-1 text-sm text-red-500">{{ errors.confirmPassword }}</p>
                                </div>
                                
                                <div class="flex items-start">
                                    <div class="flex items-center h-5">
                                        <input
                                            id="agreeTerms"
                                            v-model="form.agreeTerms"
                                            type="checkbox"
                                            class="h-4 w-4 text-pink-600 focus:ring-pink-500 border-gray-300 rounded"
                                            :class="{ 'border-red-500': errors.agreeTerms }"
                                        />
                                    </div>
                                    <div class="ml-3 text-sm">
                                        <label for="agreeTerms" class="font-medium text-gray-700">Я согласен с <a href="/terms" class="text-pink-600 hover:underline">Условиями использования</a> и <a href="/privacy" class="text-pink-600 hover:underline">Политикой конфиденциальности</a></label>
                                        <p v-if="errors.agreeTerms" class="mt-1 text-sm text-red-500">{{ errors.agreeTerms }}</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Navigation Buttons -->
                            <div class="flex justify-between pt-2">
                                <button
                                    type="button"
                                    @click="currentStep = 2"
                                    class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500"
                                >
                                    <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                    </svg>
                                    Назад
                                </button>
                                
                                <button
                                    type="submit"
                                    class="inline-flex justify-center py-2 px-6 border border-transparent shadow-sm text-sm font-medium rounded-lg text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500"
                                >
                                    Завершить регистрацию
                                </button>
                            </div>
                        </div>
                    </form>
                    
                    <!-- Login Link -->
                    <div class="mt-6 text-center text-sm">
                        <p class="text-gray-600">
                            Уже есть аккаунт?
                            <button @click="authStore.openLoginModal" class="font-medium text-pink-600 hover:text-pink-500 ml-1">
                                Войти
                            </button>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

<style scoped>
.register-page {
    background-image: url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%23f9a8d4" fill-opacity="0.1" d="M0,64L48,90.7C96,117,192,171,288,165.3C384,160,480,96,576,90.7C672,85,768,139,864,138.7C960,139,1056,85,1152,69.3C1248,53,1344,75,1392,85.3L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>');
    background-repeat: no-repeat;
    background-position: bottom;
    background-size: 100% auto;
}

/* Smooth transitions */
.fade-enter-active, .fade-leave-active {
    transition: opacity 0.3s ease;
}
.fade-enter-from, .fade-leave-to {
    opacity: 0;
}

/* Custom checkbox styling */nput[type="checkbox"]:checked {
    background-color: #db2777;
    border-color: #db2777;
}

/* Focus styles */
*:focus {
    outline: none;
}

/* Scrollbar styling */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background: #cbd5e0;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #a0aec0;
}
</style>
